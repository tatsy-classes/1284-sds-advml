Traceback (most recent call last):
  File "/home/runner/.cache/pypoetry/virtualenvs/sds-adv-ml-t6Z6UgPC-py3.9/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/.cache/pypoetry/virtualenvs/sds-adv-ml-t6Z6UgPC-py3.9/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/.cache/pypoetry/virtualenvs/sds-adv-ml-t6Z6UgPC-py3.9/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/runner/.cache/pypoetry/virtualenvs/sds-adv-ml-t6Z6UgPC-py3.9/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.cache/pypoetry/virtualenvs/sds-adv-ml-t6Z6UgPC-py3.9/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.cache/pypoetry/virtualenvs/sds-adv-ml-t6Z6UgPC-py3.9/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from matplotlib import cm

# データセットの取り出し
X_sr, y_sr = datasets.make_swiss_roll(n_samples=n_samples, noise=0.1)

# yの値を正規化して、色情報に変換しておく
y_sr = (y_sr - y_sr.min()) / (y_sr.max() - y_sr.min())
c = cm.rainbow(y_sr)

# 三次元プロットの表示
fig = plt.figure(figsize=(6, 6))
ax = fig.add_subplot(111, projection="3d")
ax.scatter(X_sr[:, 0], X_sr[:, 1], X_sr[:, 2], color=c, s=4)
ax.set_title("Swiss Roll")
ax.axis("equal")
ax.set_xlabel("x")
ax.set_ylabel("y")
ax.set_zlabel("z")
plt.tight_layout()
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[2], line 16[0m
[1;32m     14[0m fig [38;5;241m=[39m plt[38;5;241m.[39mfigure(figsize[38;5;241m=[39m([38;5;241m6[39m, [38;5;241m6[39m))
[1;32m     15[0m ax [38;5;241m=[39m fig[38;5;241m.[39madd_subplot([38;5;241m111[39m, projection[38;5;241m=[39m[38;5;124m"[39m[38;5;124m3d[39m[38;5;124m"[39m)
[0;32m---> 16[0m [43max[49m[38;5;241;43m.[39;49m[43mscatter[49m[43m([49m[43mX_sr[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[38;5;241;43m0[39;49m[43m][49m[43m,[49m[43m [49m[43mX_sr[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[38;5;241;43m1[39;49m[43m][49m[43m,[49m[43m [49m[43mX_sr[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[38;5;241;43m2[39;49m[43m][49m[43m,[49m[43m [49m[43mcolor[49m[38;5;241;43m=[39;49m[43mc[49m[43m,[49m[43m [49m[43ms[49m[38;5;241;43m=[39;49m[38;5;241;43m4[39;49m[43m)[49m
[1;32m     17[0m ax[38;5;241m.[39mset_title([38;5;124m"[39m[38;5;124mSwiss Roll[39m[38;5;124m"[39m)
[1;32m     18[0m ax[38;5;241m.[39maxis([38;5;124m"[39m[38;5;124mequal[39m[38;5;124m"[39m)

File [0;32m~/.cache/pypoetry/virtualenvs/sds-adv-ml-t6Z6UgPC-py3.9/lib/python3.9/site-packages/matplotlib/__init__.py:1465[0m, in [0;36m_preprocess_data.<locals>.inner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1462[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m   1463[0m [38;5;28;01mdef[39;00m [38;5;21minner[39m(ax, [38;5;241m*[39margs, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1464[0m     [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1465[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43max[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;28;43mmap[39;49m[43m([49m[43msanitize_sequence[49m[43m,[49m[43m [49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1467[0m     bound [38;5;241m=[39m new_sig[38;5;241m.[39mbind(ax, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   1468[0m     auto_label [38;5;241m=[39m (bound[38;5;241m.[39marguments[38;5;241m.[39mget(label_namer)
[1;32m   1469[0m                   [38;5;129;01mor[39;00m bound[38;5;241m.[39mkwargs[38;5;241m.[39mget(label_namer))

File [0;32m~/.cache/pypoetry/virtualenvs/sds-adv-ml-t6Z6UgPC-py3.9/lib/python3.9/site-packages/mpl_toolkits/mplot3d/axes3d.py:2377[0m, in [0;36mAxes3D.scatter[0;34m(self, xs, ys, zs, zdir, s, c, depthshade, *args, **kwargs)[0m
[1;32m   2372[0m s [38;5;241m=[39m np[38;5;241m.[39mma[38;5;241m.[39mravel(s)  [38;5;66;03m# This doesn't have to match x, y in size.[39;00m
[1;32m   2374[0m xs, ys, zs, s, c, color [38;5;241m=[39m cbook[38;5;241m.[39mdelete_masked_points(
[1;32m   2375[0m     xs, ys, zs, s, c, kwargs[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mcolor[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m)
[1;32m   2376[0m     )
[0;32m-> 2377[0m [38;5;28;01mif[39;00m kwargs[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mcolor[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m):
[1;32m   2378[0m     kwargs[[38;5;124m'[39m[38;5;124mcolor[39m[38;5;124m'[39m] [38;5;241m=[39m color
[1;32m   2380[0m [38;5;66;03m# For xs and ys, 2D scatter() will do the copying.[39;00m

[0;31mValueError[0m: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

